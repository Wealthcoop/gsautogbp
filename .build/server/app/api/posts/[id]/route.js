"use strict";(()=>{var e={};e.id=602,e.ids=[602],e.modules={53524:e=>{e.exports=require("@prisma/client")},72934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},54580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},45869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},27790:e=>{e.exports=require("assert")},78893:e=>{e.exports=require("buffer")},84770:e=>{e.exports=require("crypto")},17702:e=>{e.exports=require("events")},32615:e=>{e.exports=require("http")},35240:e=>{e.exports=require("https")},86624:e=>{e.exports=require("querystring")},17360:e=>{e.exports=require("url")},21764:e=>{e.exports=require("util")},71568:e=>{e.exports=require("zlib")},43036:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>v,patchFetch:()=>y,requestAsyncStorage:()=>m,routeModule:()=>h,serverHooks:()=>w,staticGenerationAsyncStorage:()=>f});var s={};t.r(s),t.d(s,{DELETE:()=>g,GET:()=>c,PUT:()=>x,dynamic:()=>l});var n=t(79182),o=t(72007),a=t(56719),i=t(93442),u=t(57978),p=t(11826),d=t(83178);let l="force-dynamic";async function c(e,{params:r}){try{let e=await (0,u.getServerSession)(p.L);if(!e?.user?.id)return i.NextResponse.json({error:"Unauthorized"},{status:401});let t=await d._.post.findFirst({where:{id:r.id,userId:e.user.id}});if(!t)return i.NextResponse.json({error:"Post not found"},{status:404});return i.NextResponse.json({post:t})}catch(e){return console.error("Error fetching post:",e),i.NextResponse.json({error:"Internal server error"},{status:500})}}async function x(e,{params:r}){try{let t=await (0,u.getServerSession)(p.L);if(!t?.user?.id)return i.NextResponse.json({error:"Unauthorized"},{status:401});let{title:s,content:n,type:o,imageUrl:a,scheduledAt:l,eventStartDate:c,eventEndDate:x,eventLocation:g,offerValidUntil:h,offerTerms:m}=await e.json();if(!await d._.post.findFirst({where:{id:r.id,userId:t.user.id}}))return i.NextResponse.json({error:"Post not found"},{status:404});let f=await d._.post.update({where:{id:r.id},data:{title:s,content:n,type:o.toUpperCase(),imageUrl:a,scheduledAt:l?new Date(l):null,eventStartDate:c?new Date(c):null,eventEndDate:x?new Date(x):null,eventLocation:g,offerValidUntil:h?new Date(h):null,offerTerms:m,status:l?"SCHEDULED":"DRAFT"}});return i.NextResponse.json({post:f})}catch(e){return console.error("Error updating post:",e),i.NextResponse.json({error:"Internal server error"},{status:500})}}async function g(e,{params:r}){try{let e=await (0,u.getServerSession)(p.L);if(!e?.user?.id)return i.NextResponse.json({error:"Unauthorized"},{status:401});if(!await d._.post.findFirst({where:{id:r.id,userId:e.user.id}}))return i.NextResponse.json({error:"Post not found"},{status:404});return await d._.post.delete({where:{id:r.id}}),i.NextResponse.json({message:"Post deleted successfully"})}catch(e){return console.error("Error deleting post:",e),i.NextResponse.json({error:"Internal server error"},{status:500})}}let h=new n.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/posts/[id]/route",pathname:"/api/posts/[id]",filename:"route",bundlePath:"app/api/posts/[id]/route"},resolvedPagePath:"/home/ubuntu/gold-standard-gbp-app/app/app/api/posts/[id]/route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:m,staticGenerationAsyncStorage:f,serverHooks:w}=h,v="/api/posts/[id]/route";function y(){return(0,a.patchFetch)({serverHooks:w,staticGenerationAsyncStorage:f})}},11826:(e,r,t)=>{t.d(r,{L:()=>a});var s=t(88120),n=t(64617),o=t(83178);let a={adapter:(0,n.N)(o._),providers:[(0,s.Z)({clientId:process.env.GOOGLE_CLIENT_ID,clientSecret:process.env.GOOGLE_CLIENT_SECRET,authorization:{params:{scope:"openid email profile https://www.googleapis.com/auth/business.manage"}}})],session:{strategy:"jwt"},pages:{signIn:"/login"},callbacks:{jwt:async({token:e,user:r,account:t})=>(r&&(e.id=r.id,e.plan=r.plan),t&&(e.accessToken=t.access_token,e.refreshToken=t.refresh_token),e),session:async({session:e,token:r})=>(r&&e.user&&(e.user.id=r.id,e.user.plan=r.plan),e),async signIn({user:e,account:r}){if(r?.provider==="google")try{await o._.user.upsert({where:{email:e.email},update:{},create:{email:e.email,name:e.name,image:e.image,plan:"FREE"}})}catch(e){console.error("Error creating/updating user:",e)}return!0}}}},83178:(e,r,t)=>{t.d(r,{_:()=>n});var s=t(53524);let n=globalThis.prisma??new s.PrismaClient}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[372,25,609],()=>t(43036));module.exports=s})();