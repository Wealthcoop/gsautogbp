"use strict";(()=>{var e={};e.id=576,e.ids=[576],e.modules={53524:e=>{e.exports=require("@prisma/client")},72934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},54580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},45869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},27790:e=>{e.exports=require("assert")},78893:e=>{e.exports=require("buffer")},84770:e=>{e.exports=require("crypto")},17702:e=>{e.exports=require("events")},32615:e=>{e.exports=require("http")},35240:e=>{e.exports=require("https")},86624:e=>{e.exports=require("querystring")},17360:e=>{e.exports=require("url")},21764:e=>{e.exports=require("util")},71568:e=>{e.exports=require("zlib")},96015:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>x,patchFetch:()=>y,requestAsyncStorage:()=>m,routeModule:()=>g,serverHooks:()=>w,staticGenerationAsyncStorage:()=>f});var s={};r.r(s),r.d(s,{POST:()=>h,dynamic:()=>d});var o=r(49303),a=r(88716),n=r(60670),i=r(87070),c=r(75571),l=r(90455),u=r(62435),p=r(9487);let d="force-dynamic";async function h(e){try{let t=await (0,c.getServerSession)((0,l.b)());if(!t?.user?.id)return i.NextResponse.json({error:"Unauthorized"},{status:401});let{postId:r}=await e.json();if(!r)return i.NextResponse.json({error:"Post ID is required"},{status:400});let s=await (0,p.a)().post.findUnique({where:{id:r},include:{business:!0}});if(!s)return i.NextResponse.json({error:"Post not found"},{status:404});if(s.userId!==t.user.id)return i.NextResponse.json({error:"Unauthorized"},{status:403});if(!s.business)return i.NextResponse.json({error:"Business not associated with post"},{status:400});let o=await (0,u.qb)(t.user.id);if(!o)return i.NextResponse.json({error:"Google access token not found"},{status:401});let a=new u.$w(o),n=(0,u.u3)(s),d=await a.createPost(s.business.googleId,n);return await (0,p.a)().post.update({where:{id:r},data:{googlePostId:d.name,status:"PUBLISHED"}}),i.NextResponse.json({message:"Post published successfully",googlePostId:d.name})}catch(e){return console.error("Error publishing post to Google:",e),i.NextResponse.json({error:"Failed to publish post to Google Business Profile"},{status:500})}}let g=new o.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/posts/google/route",pathname:"/api/posts/google",filename:"route",bundlePath:"app/api/posts/google/route"},resolvedPagePath:"/home/ubuntu/gsautogbp/app/api/posts/google/route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:m,staticGenerationAsyncStorage:f,serverHooks:w}=g,x="/api/posts/google/route";function y(){return(0,n.patchFetch)({serverHooks:w,staticGenerationAsyncStorage:f})}},90455:(e,t,r)=>{r.d(t,{b:()=>l});var s=r(77234),o=r(53797),a=r(13539),n=r(9487),i=r(42023),c=r.n(i);function l(){let e;try{e=(0,a.N)((0,n.a)())}catch(t){console.warn("Prisma adapter not available during build:",t),e=void 0}return{adapter:e,providers:[(0,s.Z)({clientId:process.env.GOOGLE_CLIENT_ID,clientSecret:process.env.GOOGLE_CLIENT_SECRET,authorization:{params:{scope:"openid email profile https://www.googleapis.com/auth/business.manage"}}}),(0,o.Z)({name:"credentials",credentials:{email:{label:"Email",type:"email"},password:{label:"Password",type:"password"}},async authorize(e){if(!e?.email||!e?.password)return null;try{let t=(0,n.a)(),r=await t.user.findUnique({where:{email:e.email}});if(!r||!r.password||!await c().compare(e.password,r.password))return null;return{id:r.id,email:r.email,name:r.name,plan:r.plan}}catch(e){return console.error("Error during authentication:",e),null}}})],session:{strategy:"jwt"},pages:{signIn:"/login"},callbacks:{jwt:async({token:e,user:t,account:r})=>(t&&(e.id=t.id,e.plan=t.plan),r&&(e.accessToken=r.access_token,e.refreshToken=r.refresh_token),e),session:async({session:e,token:t})=>(t&&e.user&&(e.user.id=t.id,e.user.plan=t.plan),e),async signIn({user:e,account:t}){if(t?.provider==="google")try{let t=(0,n.a)();await t.user.upsert({where:{email:e.email},update:{},create:{email:e.email,name:e.name,image:e.image,plan:"FREE"}})}catch(e){console.error("Error creating/updating user:",e)}else t?.provider;return!0}}}}},9487:(e,t,r)=>{r.d(t,{a:()=>a});var s=r(53524);let o=globalThis;function a(){return function(){if(!o.prisma){if(!process.env.DATABASE_URL)throw Error("DATABASE_URL is required in production");o.prisma=new s.PrismaClient}return o.prisma}()}new Proxy({},{get(e,t){let r=a(),s=r[t];return"function"==typeof s?s.bind(r):s}})},62435:(e,t,r)=>{r.d(t,{$w:()=>o,qb:()=>a,u3:()=>i});var s=r(9487);class o{constructor(e){this.accessToken=e,this.baseUrl="https://mybusinessbusinessinformation.googleapis.com/v1",this.postsBaseUrl="https://mybusiness.googleapis.com/v4"}async getBusinessAccounts(){let e=await fetch(`${this.baseUrl}/accounts`,{headers:{Authorization:`Bearer ${this.accessToken}`,"Content-Type":"application/json"}});if(!e.ok)throw Error(`Failed to fetch accounts: ${e.statusText}`);return e.json()}async getBusinessLocations(e){let t=await fetch(`${this.baseUrl}/accounts/${e}/locations`,{headers:{Authorization:`Bearer ${this.accessToken}`,"Content-Type":"application/json"}});if(!t.ok)throw Error(`Failed to fetch locations: ${t.statusText}`);return t.json()}async createPost(e,t){let r=await fetch(`${this.postsBaseUrl}/${e}/localPosts`,{method:"POST",headers:{Authorization:`Bearer ${this.accessToken}`,"Content-Type":"application/json"},body:JSON.stringify(t)});if(!r.ok){let e=await r.text();throw Error(`Failed to create post: ${r.statusText} - ${e}`)}return r.json()}async getPosts(e){let t=await fetch(`${this.postsBaseUrl}/${e}/localPosts`,{headers:{Authorization:`Bearer ${this.accessToken}`,"Content-Type":"application/json"}});if(!t.ok)throw Error(`Failed to fetch posts: ${t.statusText}`);return t.json()}async deletePost(e){let t=await fetch(`${this.postsBaseUrl}/${e}`,{method:"DELETE",headers:{Authorization:`Bearer ${this.accessToken}`,"Content-Type":"application/json"}});if(!t.ok)throw Error(`Failed to delete post: ${t.statusText}`)}}async function a(e){try{let t=await (0,s.a)().account.findFirst({where:{userId:e,provider:"google"}});if(!t?.access_token)return null;if(t.expires_at&&1e3*t.expires_at<Date.now()){let e=await n(t.refresh_token);if(e)return await (0,s.a)().account.update({where:{id:t.id},data:{access_token:e.access_token,expires_at:e.expires_at}}),e.access_token;return null}return t.access_token}catch(e){return console.error("Error getting Google access token:",e),null}}async function n(e){try{let t=await fetch("https://oauth2.googleapis.com/token",{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:new URLSearchParams({client_id:process.env.GOOGLE_CLIENT_ID,client_secret:process.env.GOOGLE_CLIENT_SECRET,refresh_token:e,grant_type:"refresh_token"})});if(!t.ok)throw Error("Failed to refresh token");let r=await t.json();return{access_token:r.access_token,expires_at:Math.floor(Date.now()/1e3)+r.expires_in}}catch(e){return console.error("Error refreshing Google token:",e),null}}function i(e){let t={name:"",languageCode:"en",summary:e.content,topicType:"STANDARD"};switch(e.imageUrl&&(t.media=[{mediaFormat:"PHOTO",sourceUrl:e.imageUrl}]),e.type){case"EVENT":t.topicType="EVENT",e.eventStartDate&&e.eventEndDate&&(t.event={title:e.title,schedule:{startDate:e.eventStartDate.toISOString().split("T")[0],startTime:e.eventStartDate.toISOString().split("T")[1].split(".")[0],endDate:e.eventEndDate.toISOString().split("T")[0],endTime:e.eventEndDate.toISOString().split("T")[1].split(".")[0]}});break;case"OFFER":t.topicType="OFFER",e.offerTerms&&(t.offer={termsConditions:e.offerTerms})}return t}}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[276,776,83,972],()=>r(96015));module.exports=s})();